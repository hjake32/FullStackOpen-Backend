{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCPpCK,EAAU,qDAkBD,EAhBA,WAGb,OAFgBC,IAAMC,IAAIF,GAEXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH5BK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAIP,yBAAKd,UAAU,SACVc,ICQEC,EAfA,WAOX,OACI,yBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKN,6BACA,+FCyEGC,EA/EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAEZ,IAEH,IAwCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAEhE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAce,QAASc,IACvB,6BACE,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACvC,GAAD,OACf,kBAAC,EAAD,CAAMwC,IAAKxC,EAAKe,GAAIf,KAAMA,EAAMC,iBAAmB,kBArDhC,SAACc,GAC1B,IAAMf,EAAO0B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAE3B,KAAOA,KAChC4B,EAAW,eAAO3C,EAAP,CAAaG,WAAYH,EAAKG,YAE/CgC,EACUpB,EAAI4B,GACXjC,MAAK,SAAAkC,GACJjB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO4C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,QAAD,OACLjC,EAAKK,QADA,yCAGf0C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAE3B,KAAOA,SAqCuBiC,CAAmBhD,EAAKe,WAGrF,0BAAMkC,SApCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB/C,QAASuB,EACTyB,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAG7BtB,EACQiB,GACP1C,MAAK,SAAAkC,GACJjB,EAASD,EAAMgC,OAAOd,IACtBf,EAAW,SAyBT,2BAAO8B,MAAO/B,EAASgC,SArBJ,SAACV,GACxBrB,EAAWqB,EAAMW,OAAOF,UAqBpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MC3ENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.88a6c77e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\n\r\nconst baseUrl = 'https://stark-tundra-78986.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  \r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll,\r\n  create,\r\n  update\r\n}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Comp Sci, University of Helsinki 2020</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {useState, useEffect} from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = () => { \r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('a new note...')\r\n  const [showAll, setShowAll] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState('Some error happened...')\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note ${note.content} was already removed from the server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > .5\r\n    }\r\n\r\n    noteService\r\n    .create(noteObject)\r\n    .then(returnedNote => {\r\n      setNotes(notes.concat(returnedNote))\r\n      setNewNote('')\r\n    })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => \r\n          <Note key={note.id} note={note} toggleImportance= {() => toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange= {handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n"],"sourceRoot":""}